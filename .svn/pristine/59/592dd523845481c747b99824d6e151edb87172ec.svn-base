<style scoped>

.wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    padding-top: 150px;
    padding-bottom: 200px;
}
.wrapper > h1{
  text-align: center;
  vertical-align: middle;
  margin-bottom: 20px;
  color: #000;
}
.login {
    margin: 0 auto;
    padding: 200px auto;
    width: 200px;
    height: 100%;
}

</style>

<template>

<div class="wrapper">
<h1>
后台管理系统
</h1>
    <div class="login">
        <i-form ref="formInline" :model="formInline" :rules="ruleInline">
            <Form-item prop="user">
                <Input v-model="formInline.user"></Input>
            </Form-item>
            <Form-item prop="password">
                <Input v-model="formInline.password" type="password"></Input>
            </Form-item>
            <Form-item>
                <i-button type="success" @click.native="handleSubmit('formInline')" long>登录</i-button>
            </Form-item>
        </i-form>
    </div>
</div>

</template>

<script>

export default {
    data() {
            return {
                formInline: {
                    user: '',
                    password: '',
                },
                ruleInline: {
                    user: [{
                        required: true,
                        message: '请填写用户名',
                        trigger: 'blur'
                    }],
                    password: [{
                        required: true,
                        message: '请填写密码',
                        trigger: 'blur'
                    }, {
                        type: 'string',
                        min: 6,
                        message: '密码长度不能小于6位',
                        trigger: 'blur'
                    }]
                }
            }
        },
        methods: {
            handleSubmit(name) {
                    this.$refs[name].validate((valid) => {
                        if (valid) {
                            this.$http.get(this.globalconfig.loginapi,
                                    {
                                        params:{
                                            loginname:this.formInline.user,
                                            password:this.formInline.password,
                                        }
                                    },  {emulateJSON: true})
                                .then((response) => {
                                    if(response.body.error){
                                        this.$Message.error(response.body.error);
                                    } else {
                                        window.localStorage.setItem("usrid",response.body.usrid)
                                        window.localStorage.setItem("menus",JSON.stringify(response.body.menus))
                                        window.localStorage.setItem("adminmenus",JSON.stringify(response.body.adminmenus))
                                        //返回页面信息  然后路由配置所有的页面路由
                                        window.localStorage.setItem("pages",JSON.stringify(response.body.pages))
                                        var _isadmin = false;
                                        if(response.data.isadmin == "true"){
                                            _isadmin = true;
                                        }
                                        var userinfo = {};
                                        userinfo.isadmin = _isadmin;
                                        userinfo.usrname = response.data.usrname
                                        window.localStorage.setItem("usrinfo",JSON.stringify(userinfo));
                                        this.$router.push('/index');
                                    }
                                }, (response) => {
                                    this.$Message.success('这是一条失败的提示');
                                });

                        }
                    })
                },
                handleReset(val) {

                }
        }
}
</script>
